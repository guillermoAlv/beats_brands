// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicMainPage,
  DefaultMainPageProps
} from "./plasmic/responsive_bb/PlasmicMainPage";
import RoutesDialog from "./RoutesDialog"
import HeaderRowComp from "./HeaderRowComp"
import SearchCard from "./SearchCard"
import BrandCard from "./BrandCard"
import {SearchBox} from 'react-instantsearch-dom';
import algoliasearch from 'algoliasearch';
import {
  InstantSearch,
  connectStateResults,
  Hits
} from 'react-instantsearch-dom';
// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface MainPageProps extends Omit<DefaultMainPageProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultMainPageProps altogether and have
// total control over the props for your component.

const searchClient = algoliasearch(
  'E5ACT1VI4D',
  '58c5723bb97942db9b754bf244b1da75'
);


function Hit(props: any) {
  var cat = ""
  if (Array.isArray(props.hit["tags propios"])){
    cat = props.hit["tags propios"][0]
  }else{
    cat = props.hit["tags propios"]
  }
  cat = cat.length < 20 ? cat :  cat.split(",")[0]+"..."
  return <BrandCard 
    brandCardImage={<img alt="brand" style={{maxWidth: "100%", maxHeight: "100%"}} src={props.hit["Image Link"]}/>}
    name={props.hit["title"]}
    category={"#"+ cat}/>
}

function connectedResult(te: ()=>void, {searchState, searchResults, children}: any){
  if(searchResults===null || searchResults["query"]===""){
    return (<SearchCard searchTerm={"Zapatos"} onClick={te}/>)
  }else{
    return (<div><Hits hitComponent={Hit} /></div>)
  }
}

interface MainPageProps extends DefaultMainPageProps {}

function MainPage(props: MainPageProps) {
  const [isRouteDialogShowed, updateRouteDialog] = React.useState(false)
  const [defaultSearch, setDefaultSearch] = React.useState("")

  const searchBox = <SearchBox submit={<div/>} reset={<div/>} defaultRefinement={defaultSearch} translations={{placeholder: 'Prendas, estilo, mujer, hombre ...'}}/>
  const  Results = connectStateResults(({ searchState, searchResults, children}) => {return connectedResult(()=>{setDefaultSearch("Zapatos")}, {searchState, searchResults, children})});
  console.log(defaultSearch)
  return <InstantSearch searchClient={searchClient} indexName="dev_manu">
    <PlasmicMainPage 
      routesDi={isRouteDialogShowed ? <RoutesDialog/> : null} 
      headerRowA={<HeaderRowComp 
                    expand={()=>updateRouteDialog(!isRouteDialogShowed)} 
                    headerSearchBox={searchBox}/>}
      storesResults={<Results/>}
      heroRowSearchbox={searchBox}
      {...props} />
  </InstantSearch>;
}

export default MainPage;
