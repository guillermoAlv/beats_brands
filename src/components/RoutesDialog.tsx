// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicRoutesDialog,
  DefaultRoutesDialogProps
} from "./plasmic/responsive_bb/PlasmicRoutesDialog";
import {Link} from "react-router-dom"
import DialogClickableText from "./DialogClickableText";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface RoutesDialogProps extends Omit<DefaultRoutesDialogProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultRoutesDialogProps altogether and have
// total control over the props for your component.
interface RoutesDialogProps extends DefaultRoutesDialogProps {
  changeVisible: ()=>void
}

function RoutesDialog({changeVisible, ...props}: RoutesDialogProps) {
  const node = React.useRef<any>();
  React.useEffect(() => {
    function handleClick(e:  MouseEvent): void{
      if (node.current.contains(e.target)) {
        return;
      }
      changeVisible()
    };
    // add when mounted
    document.addEventListener("mousedown", handleClick);
    // return function to be called when unmounted
    return () => {
      document.removeEventListener("mousedown", handleClick);
    };
  });

  return (<div ref={node}><PlasmicRoutesDialog 
    subscribeButton={<Link style={{width: "100%"}} to="/subscribe"><DialogClickableText text={"SuscrÃ­bete"}/></Link>}
    aboutusButton={<Link style={{width: "100%"}} to="/subscribe"><DialogClickableText text={"Sobre nosotros"}/></Link>}
    faqButton={<Link style={{width: "100%"}} to="/subscribe"><DialogClickableText text={"FAQ"}/></Link>}
    contactButton={<Link style={{width: "100%"}} to="/subscribe"><DialogClickableText text={"Contacto"}/></Link>}
  {...props} /></div>)
}

export default RoutesDialog;
